on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: release

jobs:
  build:
    name: tag release
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@master
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x
      - name: Set env
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
      - name: make gox
        env:
          VERSION: ${{ env.RELEASE_VERSION }}
          SHORT_VERSION: ${{ env.RELEASE_VERSION }}
        run: |
          make gox
      - name: create github release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: upload linux-amd64
        id: upload-linux-amd64
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/${{ env.RELEASE_VERSION }}/apmz_linux_amd64.tar.gz
          asset_name: apmz_${{ env.RELEASE_VERSION }}_linux_amd64.tar.gz
          asset_content_type: application/gzip
      - name: upload darwin-amd64
        id: upload-darwin-amd64
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/${{ env.RELEASE_VERSION }}/apmz_darwin_amd64.tar.gz
          asset_name: apmz_${{ env.RELEASE_VERSION }}_darwin_amd64.tar.gz
          asset_content_type: application/gzip
      - name: upload windows-amd64
        id: upload-windows-amd64
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/${{ env.RELEASE_VERSION }}/apmz_windows_amd64.tar.gz
          asset_name: apmz_${{ env.RELEASE_VERSION }}_windows_amd64.tar.gz
          asset_content_type: application/gzip